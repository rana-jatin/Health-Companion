
/*! PDF.js v5.2.133 - Worker
 * Copyright 2024 Mozilla Foundation
 * Licensed under the Apache License, Version 2.0
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).pdfjsWorker={})}(this,(function(e){"use strict";const t="undefined"!=typeof window,n="undefined"!=typeof process&&process.versions&&process.versions.node,r=t||n,o=!0,a=!1;function i(){if(r)return!0;throw new Error("Not implemented: isNodeJS")}const s=i()?require("fs"):null,l=i()?require("path"):null,c=i()?require("crypto"):null;const u=Object.freeze({__proto__:null,get isNodeJS(){return i()},get GlobalScope(){return r?global:globalThis},get DOMMatrixReadOnly(){return t?globalThis.DOMMatrixReadOnly:null},get ImageData(){return t?globalThis.ImageData:null},get Path2D(){return t?globalThis.Path2D:null}});if(i()&&!s)throw new Error("Node.js compatibility requires the fs module");if(i()&&!l)throw new Error("Node.js compatibility requires the path module");if(i()&&!c)throw new Error("Node.js compatibility requires the crypto module");e.PDFWorker=class{constructor(){this.onmessage=null}postMessage(e){this.onmessage&&this.onmessage({data:e})}terminate(){}},Object.defineProperty(e,"__esModule",{value:!0})}));
